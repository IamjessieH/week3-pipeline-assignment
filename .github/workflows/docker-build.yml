name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Run tests
      run: mvn test
      
  build-and-analyze:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn clean package
      
    - name: SonarQube Analysis
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=week3-pipeline-assignment -Dsonar.projectName='BSN Validator ci/cd p2 - Jessie H'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest .
        
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Push to DockerHub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
      
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to OEGE Development Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.OEGE_HOST }}
        username: ${{ secrets.OEGE_USERNAME }}
        password: ${{ secrets.OEGE_PASSWORD }}
        script: |
          echo "=== Pulling image ==="
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
          
          echo "=== Stopping old container ==="
          docker stop bsn-validator-dev || true
          
          echo "=== Removing old container ==="
          docker rm bsn-validator-dev || true
          
          echo "=== Starting new container ==="
          docker run -d --name bsn-validator-dev -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
          
          echo "=== Waiting 5 seconds ==="
          sleep 5
          
          echo "=== Checking container status ==="
          docker ps -a | grep bsn-validator
          
          echo "=== Container logs ==="
          docker logs bsn-validator-dev || true
          
          echo "=== Testing from inside server ==="
          curl http://localhost:8080/validate/123456782 || echo "curl failed"
    
    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Code Analysis Report - BSN Validator"
        to: ${{ secrets.EMAIL_TO }}
        from: ${{ secrets.EMAIL_USERNAME }}
        body: |
          === CODE ANALYSIS REPORT ===
          
          Project: BSN Validator CI/CD Pipeline
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          
          === SONARQUBE ANALYSIS ===
          View analysis results: https://sonarcloud.io/project/overview?id=week3-pipeline-assignment
          
          === DEPLOYMENT STATUS ===
          Environment: Development
          Status: Successfully deployed
          
          === TEST RESULTS ===
          View pipeline: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          === RECOMMENDATIONS ===
          Please review the SonarQube analysis report for any code quality issues.
          
          Best regards,
          CI/CD Pipeline
        
  deploy-test:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Deploy to OEGE Test Server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.OEGE_HOST }}
        username: ${{ secrets.OEGE_USERNAME }}
        password: ${{ secrets.OEGE_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
          docker stop bsn-validator-test || true
          docker rm bsn-validator-test || true
          docker run -d --name bsn-validator-test -p 8081:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
        
  deploy-acc:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    if: github.ref == 'refs/heads/release'
    
    steps:
    - name: Deploy to OEGE Acceptance Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.OEGE_HOST }}
        username: ${{ secrets.OEGE_USERNAME }}
        password: ${{ secrets.OEGE_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
          docker stop bsn-validator-acc || true
          docker rm bsn-validator-acc || true
          docker run -d --name bsn-validator-acc -p 8082:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
        
  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-and-analyze
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to OEGE Production Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.OEGE_HOST }}
        username: ${{ secrets.OEGE_USERNAME }}
        password: ${{ secrets.OEGE_PASSWORD }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest
          docker stop bsn-validator-prod || true
          docker rm bsn-validator-prod || true
          docker run -d --name bsn-validator-prod -p 8083:8080 ${{ secrets.DOCKERHUB_USERNAME }}/bsn-validator:latest